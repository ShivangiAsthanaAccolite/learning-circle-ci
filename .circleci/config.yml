# This config was automatically generated from your source code
# Stacks detected: deps:node:.
version: 2.1
orbs:
  node: circleci/node@5

executors:
  python-executor:
    docker:
      - image: circleci/python:3.8
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install --legacy-peer-deps
      - run:
          name: Create test-results directory
          command: mkdir -p test-results
      - run:
          name: Run tests
          command: npm test --passWithNoTests
      - store_test_results:
          path: test-results
  build-node:
    # Build node project
    executor: node/default
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: npm install --legacy-peer-deps
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  deploy:
    # This is an example deploy job, not actually used by the workflow
    # docker:
    #   - image: cibuilds/aws:latest
    # steps:
    #   - checkout
    #   # - run: # Install the AWS CLI if it is not already included in the docker image
    #   #     name: Install awscli
    #   #     command: sudo pip install awscli
    #   - run:
    #       name: Upgrade AWS CLI and dependencies
    #       command: |
    #         sudo pip install --upgrade awscli boto3 botocore
    #   - run:
    #       name: Verify AWS CLI installation
    #       command: aws --version
    #   - run: # Deploy to S3 using the sync command
    #       name: Deploy to S3
    #       command: aws s3 sync my-circle-ci-app s3://circlecishivangi
    executor: python-executor
    # environment:
    #   AWS_ACCESS_KEY_ID: ASIAYS5JOJWIVEOFH2CM
    #   AWS_SECRET_ACCESS_KEY: dklrtg4INzNMJ2gHSE6o+mM8zEH0+ddNiE5M657Q
    #   AWS_DEFAULT_REGION: us-east-1
    steps:
      - checkout
      - run:
          name: Install and upgrade AWS CLI and dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip install --upgrade pip
            pip install --upgrade awscli boto3 botocore
      - run:
          name: Configure AWS CLI with environment variables
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region us-east-1
      - run:
          name: Verify AWS CLI installation
          command: aws --version
      - run:
          name: Sync to S3
          command: aws s3 sync src s3://circlecishivangi/deploy
  say_hello:
    macos:
      xcode: 13.4.1
    steps:
      - run: echo "Say hello to YAML!"
  # Job two with a unique name
  say_goodbye:
    docker:
      - image: cimg/base:2022.05
    steps:
      - run: echo "Say goodbye to YAML!"
  test1:
    executor: node/default
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install --legacy-peer-deps
      # - run:
      #     name: Run tests with vitest
      #     command: |
      #       NODE_OPTIONS="--trace-deprecation" npx vitest run || true
      # - store_test_results:
      #     path: ./test-results
      - run:
          name: Run tests with JUnit as reporter
          command: |
            circleci tests glob 'src/**/*.test.tsx' | circleci tests split --split-by=timings > split_tests.txt
            echo "Running the following tests:"
            cat split_tests.txt
            cat split_tests.txt | xargs npm test --ci --reporters=default --reporters=jest-junit --outputFile=test-results/junit.xml
          environment:
            JEST_JUNIT_OUTPUT_DIR: test-results
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: "true"
      - store_test_results:
          path: test-results
workflows:
  build:
    jobs:
      # - test-node
      - build-node
        # requires:
        #   - test-node
      - deploy:
          requires:
            - build-node
  hello_and_goodbye:
    # List of jobs that will run
    jobs:
      - say_hello
      - say_goodbye
  testvi:
    jobs:
      - test1
